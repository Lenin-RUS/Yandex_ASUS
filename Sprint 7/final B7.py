'''
ID 58975418
1. Вводим данные - количество элементов и массив
2. Если сумма массива не делится на 2 - то резултат "False"
3. Делаем матрицу из количества строк = длинне массива, количество столбцов = сумма массива пополам.
Для сокращения памяти матрицу переделываем в 2 вектора А и В - они у нас будут чередоваться по нечетным и четным строкам
4. Заполняем по строкам. Заполняемый элемент равен максимуму из
   -значение элемента ровно над заполняемым,
   -значение зэлемента в строке выше с индексом = (столбец заполняемого элемента - значение текущего элемента массива) + значение текущего элемента массива
   (текущий элемент массива имеет индекс равный заполняемой строке)
5. В процессе заполнения, если последний элемент вектора А или В = половине суммы, то выволим "True" и заканчиваем
6. После заполнения всех строк проверяем равенство последних элементов половине суммы и выводим ответ
'''

n = input()
arr = [int(i) for i in input().split(' ')]

k = sum(arr)
result = 0

if k % 2 == 1:
    print("False")
else:
    arr.sort(reverse=True)
    k = int(k / 2)
    A = [0 for _ in range(k + 1)]
    B = [0 for _ in range(k + 1)]
    tmp_sum = 0
    for i in range(1, len(arr) + 1):
        tmp_sum += arr[i - 1]
        if A[-1] == k or B[-1] == k:
            print('True')
            result = 1
            break
        j = arr[i - 1]
        while j < (k + 1) and j <= tmp_sum:
            if i % 2 == 0:
                A[j] = max(B[j], B[j - arr[i - 1]] + arr[i - 1])
            else:
                B[j] = max(A[j], A[j - arr[i - 1]] + arr[i - 1])
            j += 1

    if result == 0:
        if k % 2 == 0:
            print(A[-1] == k)
        else:
            print(B[-1] == k)
